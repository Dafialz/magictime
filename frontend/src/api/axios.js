import axios from 'axios';

const api = axios.create({
  baseURL: import.meta.env.VITE_API_URL || 'https://magictime.onrender.com/api',
  // –ú–æ–∂–Ω–∞ —â–µ –¥–æ–¥–∞—Ç–∏ timeout, —è–∫—â–æ —Ç—Ä–µ–±–∞:
  // timeout: 10000,
});

// –î–æ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω –¥–æ –∫–æ–∂–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    // –î–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ –ø–æ–∫–∞–∂–µ–º–æ —à–ª—è—Ö:
    console.log(
      `üöÄ [${new Date().toISOString()}] ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`,
      '| Token:',
      token ? token.slice(0, 12) + '...' : '–ù–µ–º–∞—î'
    );
    return config;
  },
  (error) => {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É:', error);
    return Promise.reject(error);
  }
);

// –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
api.interceptors.response.use(
  (response) => {
    console.log('‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å:', response.status, response.config.url);
    return response;
  },
  (error) => {
    // error.response? = —î –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞, error.message = –ø–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ
    console.error(
      'üö® –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:',
      error.response?.status,
      error.response?.data || error.message
    );
    return Promise.reject(error);
  }
);

export default api;
